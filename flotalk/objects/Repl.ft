"
    # REPL

    Implements the standard read-eval-print loop for FloTalk
"
Export class: [ :Self |
    Import from 'Say'.


    "
        run - runs the REPL loop
    "
    Self addInstanceMessage: #run withAction: [ :self |
        | eval |
        eval := Evaluate new.

        [
            | statement result |

            "Prompt"
            (self say) 
                styleAttribute:     #reset;
                say:                '\n';
                styleAttribute:     #bold;
                foregroundColor:    #green;
                say:                'Flo>';
                styleAttribute:     #reset;
                say:                ' '.

            "Read"
            statement := self readLine.

            "Evaluate"
            result := eval statement: statement.

            "Print"
            (self say)
                say:            result;
                styleAttribute: #reset;
                say:            '\n'.
        ] while: [ ^true ].
    ].

    Self
] as: 'Repl'.
